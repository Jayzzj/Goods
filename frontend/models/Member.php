<?php

namespace frontend\models;

use Yii;
use yii\web\IdentityInterface;

/**
 * This is the model class for table "member".
 *
 * @property integer $id
 * @property string $username
 * @property string $auth_key
 * @property string $password_hash
 * @property string $email
 * @property string $tel
 * @property string $last_login_time
 * @property integer $last_login_ip
 * @property integer $status
 * @property integer $created_at
 * @property integer $updated_at
 */
class Member extends \yii\db\ActiveRecord implements IdentityInterface
{
    public $password;
    public $code;
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'member';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['username','password','password_hash', 'email'], 'required'],
            [['last_login_time'], 'safe'],
            [['last_login_ip', 'status', 'created_at', 'updated_at'], 'integer'],
            [['username', 'password_hash', 'email'], 'string', 'max' => 255],
            [['auth_key'], 'string', 'max' => 32],
            [['tel'], 'string', 'max' => 11],
            ['password','string'],//至少有值
            //['code','captcha'],//验证验证码
            ['code','captcha'],//验证验证码
            //['password', 'password_hash', 'compareValue' => 30, 'operator' => '==='],
            //[['password_reset'],'compare','compareAttribute'=>'newpassword','operator'=>'===','message'=>'两次密码必须一致']

            [['username'], 'unique'],
            [['email'], 'unique'],
            [['tel'], 'unique'],
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'username' => '用户名',
            'auth_key' => '认证',
            'password_hash' => '用户密码',
            'email' => '邮箱',
            'tel' => '电话',
            'last_login_time' => '最后登录时间',
            'last_login_ip' => '最后登录ip',
            'status' => '状态',
            'created_at' => '创建时间',
            'updated_at' => '修改时间',
        ];
    }


    /**
     * @param int|string $id
     * 根据主键id获取实例对象
     */


    public static function findIdentity($id)
    {
        return static::findOne($id);
// TODO: Implement findIdentity() method.
    }

    /**
     * @param mixed $token
     * @param null $type
     * 获取token登录时的用户实例
     */
    public static function findIdentityByAccessToken($token, $type = null)
    {
// TODO: Implement findIdentityByAccessToken() method.
    }

    /**
     * @return mixed
     * 获取确定对象的id
     */
    public function getId()
    {
        return $this->id;
// TODO: Implement getId() method.
    }

    /**
     * @return mixed
     * 获取自动登录的authkey
     */
    public function getAuthKey()
    {
        return $this->auth_key;
// TODO: Implement getAuthKey() method.
    }

    /**
     * @param string $authKey
     * @return bool
     * 验证自动登录的authkey
     */
    public function validateAuthKey($authKey)
    {
        return $authKey === $this->getAuthKey();
// TODO: Implement validateAuthKey() method.
    }


    public function beforeSave($insert)
    {
        if ($insert){
            //添加创建时间
            $this->created_at = time();
            //设置随机字符串auth_key
            $this->auth_key = Yii::$app->security->generateRandomString();
            //加密密码
            if ($this->password_hash){
                $this->password_hash = Yii::$app->security->generatePasswordHash($this->password);
            }
        }else{
            //否则跟新时间
            $this->updated_at = time();
        }

        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }
}
